<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        Ej5aqbHryUJB2kbcOOe7tJ6VAPb9IQIAOw==
</value>
  </data>
</root>